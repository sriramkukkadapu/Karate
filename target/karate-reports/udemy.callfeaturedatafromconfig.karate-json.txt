{"failedCount":1,"prefixedPath":"classpath:udemy\/callfeaturedatafromconfig.feature","packageQualifiedName":"udemy.callfeaturedatafromconfig","loopIndex":-1,"relativePath":"udemy\/callfeaturedatafromconfig.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":0,"errorMessage":">> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6","millis":0.0,"status":"failed"},"step":{"background":true,"line":6,"prefix":"Given","index":0,"text":"url udemyUrl"},"stepLog":"07:11:49.529 callSingle() will cache an exception\n07:11:49.529 << lock released, cached callSingle: classpath:helpers\/CreateTokenConfigVariables.feature\n07:11:49.529 callSingle() cached result is an exception\n07:11:49.544 classpath:udemy\/callfeaturedatafromconfig.feature:6\nGiven url udemyUrl\n>> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\n","callResults":[{"prefixedPath":"classpath:helpers\/CreateTokenConfigVariables.feature","loopIndex":-1,"callDepth":1,"description":"","resultDate":"2022-02-12 07:11:49 AM","durationMillis":1928.925418,"callArg":{"myVarName":"hello karate","baseUrl":"https:\/\/gorest.co.in","tokenID":"6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4","udemyUrl":"https:\/\/api.realworld.io\/api\/","userEmail":"invalid@gmail.com","userPassword":"invalid"},"failedCount":1,"packageQualifiedName":"helpers.CreateTokenConfigVariables","relativePath":"helpers\/CreateTokenConfigVariables.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":42811175,"millis":42.811175,"status":"passed"},"step":{"endLine":7,"line":4,"prefix":"*","docString":"{\"user\":{\"email\":\"#(userEmail)\",\"password\":\"#(userPassword)\"}}","index":0,"text":"def body ="},"stepLog":"07:11:47.532 karate.env system property was: qa \n07:11:47.539 >> lock acquired, begin callSingle: classpath:helpers\/CreateTokenConfigVariables.feature\n"},{"result":{"nanos":8943999,"millis":8.943999,"status":"passed"},"step":{"line":8,"prefix":"*","index":1,"text":"print body"},"stepLog":"07:11:47.649 [print] {\n  \"user\": {\n    \"email\": \"invalid@gmail.com\",\n    \"password\": \"invalid\"\n  }\n}\n \n"},{"result":{"nanos":609502,"millis":0.609502,"status":"passed"},"step":{"line":9,"prefix":"Given","index":2,"text":"url 'https:\/\/api.realworld.io\/api\/'"}},{"result":{"nanos":358761,"millis":0.358761,"status":"passed"},"step":{"line":10,"prefix":"Given","index":3,"text":"path 'users\/login'"}},{"result":{"nanos":769867,"millis":0.769867,"status":"passed"},"step":{"line":11,"prefix":"And","index":4,"text":"request body"}},{"result":{"nanos":1875324516,"millis":1875.324516,"status":"passed"},"step":{"comments":["#And request {\"user\":{\"email\":\"sriramkukkadapu@gmail.com\",\"password\":\"sriramk2\"}}","#And request {\"user\":{\"email\":\"#{email}\",\"password\":\"#{password}\"}}"],"line":14,"prefix":"When","index":5,"text":"method post"},"stepLog":"07:11:48.087 request:\n1 > POST https:\/\/api.realworld.io\/api\/users\/login\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 59\n1 > Host: api.realworld.io\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/1.8.0_281)\n1 > Accept-Encoding: gzip,deflate\n{\"user\":{\"email\":\"invalid@gmail.com\",\"password\":\"invalid\"}}\n\n07:11:49.526 response time in milliseconds: 1437\n1 < 403\n1 < Date: Sat, 12 Feb 2022 13:14:26 GMT\n1 < Content-Type: application\/json; charset=utf-8\n1 < Content-Length: 47\n1 < Connection: keep-alive\n1 < X-Powered-By: Express\n1 < Access-Control-Allow-Origin: *\n1 < Etag: W\/\"2f-83PWxEwXkLR3WfVjo3wqB0FwKlU\"\n1 < Via: 1.1 vegur\n1 < CF-Cache-Status: DYNAMIC\n1 < Expect-CT: max-age=604800, report-uri=\"https:\/\/report-uri.cloudflare.com\/cdn-cgi\/beacon\/expect-ct\"\n1 < Report-To: {\"endpoints\":[{\"url\":\"https:\\\/\\\/a.nel.cloudflare.com\\\/report\\\/v3?s=HHHoqobc6yisWljwR0WKNEKF5ILBD0weluuHusVPUeAG9xXbWRu5Duvu1RxKs7aUQc%2FecyeTEb3LMZek7K5HC3hQte5mscYlckstP4IKjkweAX8BE61gi0vnpPKxMChqMFv0\"}],\"group\":\"cf-nel\",\"max_age\":604800}\n1 < NEL: {\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}\n1 < Server: cloudflare\n1 < CF-RAY: 6dc614779b468926-LHR\n1 < alt-svc: h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400\n{\"errors\":{\"email or password\":[\"is invalid\"]}}\n\n"},{"result":{"nanos":107598,"errorMessage":"status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15","millis":0.107598,"status":"failed"},"step":{"line":15,"prefix":"Then","index":6,"text":"status 200"},"stepLog":"07:11:49.528 classpath:helpers\/CreateTokenConfigVariables.feature:15\nThen status 200\nstatus code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":16,"prefix":"*","index":7,"text":"def token = response.user.token"}}],"line":3,"description":"","durationMillis":1928.925418,"failed":true,"error":"status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15","executorName":"main","name":"","startTime":1644671507580,"refId":"[1:3]","endTime":1644671509528,"exampleIndex":-1}],"name":"Create token","passedCount":0}]},{"result":{"nanos":0,"errorMessage":">> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7","millis":0.0,"status":"failed"},"step":{"background":true,"line":7,"prefix":"*","index":1,"text":"def createTokenResponse = call read('classpath:helpers\/CreateTokenConfigVariables.feature')"},"stepLog":"07:11:49.544 classpath:udemy\/callfeaturedatafromconfig.feature:7\n* def createTokenResponse = call read('classpath:helpers\/CreateTokenConfigVariables.feature')\n>> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\n"},{"result":{"nanos":0,"errorMessage":">> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8","millis":0.0,"status":"failed"},"step":{"background":true,"line":8,"prefix":"*","index":2,"text":"def token =  createTokenResponse.token"},"stepLog":"07:11:49.544 classpath:udemy\/callfeaturedatafromconfig.feature:8\n* def token =  createTokenResponse.token\n>> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\n"},{"result":{"nanos":0,"errorMessage":">> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13","millis":0.0,"status":"failed"},"step":{"comments":["#Given header Authorization = 'Token ' + token"],"line":13,"prefix":"Given","index":0,"text":"path 'articles'"},"stepLog":"07:11:49.545 classpath:udemy\/callfeaturedatafromconfig.feature:13\nGiven path 'articles'\n>> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\n"},{"result":{"nanos":0,"errorMessage":">> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14","millis":0.0,"status":"failed"},"step":{"line":14,"prefix":"And","index":1,"text":"request {\"article\":{\"tagList\":[],\"title\":\"test\",\"description\":\"test\",\"body\":\"test\"}}"},"stepLog":"07:11:49.545 classpath:udemy\/callfeaturedatafromconfig.feature:14\nAnd request {\"article\":{\"tagList\":[],\"title\":\"test\",\"description\":\"test\",\"body\":\"test\"}}\n>> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14\n"},{"result":{"nanos":0,"errorMessage":">> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14\nclasspath:udemy\/callfeaturedatafromconfig.feature:15","millis":0.0,"status":"failed"},"step":{"line":15,"prefix":"When","index":2,"text":"method post"},"stepLog":"07:11:49.545 classpath:udemy\/callfeaturedatafromconfig.feature:15\nWhen method post\n>> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14\nclasspath:udemy\/callfeaturedatafromconfig.feature:15\n"},{"result":{"nanos":0,"errorMessage":">> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14\nclasspath:udemy\/callfeaturedatafromconfig.feature:15\nclasspath:udemy\/callfeaturedatafromconfig.feature:16","millis":0.0,"status":"failed"},"step":{"line":16,"prefix":"Then","index":3,"text":"status 200"},"stepLog":"07:11:49.545 classpath:udemy\/callfeaturedatafromconfig.feature:16\nThen status 200\n>> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14\nclasspath:udemy\/callfeaturedatafromconfig.feature:15\nclasspath:udemy\/callfeaturedatafromconfig.feature:16\n"},{"result":{"nanos":0,"errorMessage":">> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14\nclasspath:udemy\/callfeaturedatafromconfig.feature:15\nclasspath:udemy\/callfeaturedatafromconfig.feature:16\nclasspath:udemy\/callfeaturedatafromconfig.feature:17","millis":0.0,"status":"failed"},"step":{"line":17,"prefix":"And","index":4,"text":"match response.article.title == 'test'"},"stepLog":"07:11:49.545 classpath:udemy\/callfeaturedatafromconfig.feature:17\nAnd match response.article.title == 'test'\n>> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14\nclasspath:udemy\/callfeaturedatafromconfig.feature:15\nclasspath:udemy\/callfeaturedatafromconfig.feature:16\nclasspath:udemy\/callfeaturedatafromconfig.feature:17\n"},{"result":{"nanos":0,"errorMessage":">> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14\nclasspath:udemy\/callfeaturedatafromconfig.feature:15\nclasspath:udemy\/callfeaturedatafromconfig.feature:16\nclasspath:udemy\/callfeaturedatafromconfig.feature:17\nclasspath:udemy\/callfeaturedatafromconfig.feature:18","millis":0.0,"status":"failed"},"step":{"line":18,"prefix":"*","index":5,"text":"def slug = response.article.slug"},"stepLog":"07:11:49.545 classpath:udemy\/callfeaturedatafromconfig.feature:18\n* def slug = response.article.slug\n>> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14\nclasspath:udemy\/callfeaturedatafromconfig.feature:15\nclasspath:udemy\/callfeaturedatafromconfig.feature:16\nclasspath:udemy\/callfeaturedatafromconfig.feature:17\nclasspath:udemy\/callfeaturedatafromconfig.feature:18\n"},{"result":{"nanos":0,"errorMessage":">> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14\nclasspath:udemy\/callfeaturedatafromconfig.feature:15\nclasspath:udemy\/callfeaturedatafromconfig.feature:16\nclasspath:udemy\/callfeaturedatafromconfig.feature:17\nclasspath:udemy\/callfeaturedatafromconfig.feature:18\nclasspath:udemy\/callfeaturedatafromconfig.feature:22","millis":0.0,"status":"failed"},"step":{"comments":["#Delete article","#Given header Authorization = 'Token ' + token"],"line":22,"prefix":"Given","index":6,"text":"path 'articles\/' + slug"},"stepLog":"07:11:49.545 classpath:udemy\/callfeaturedatafromconfig.feature:22\nGiven path 'articles\/' + slug\n>> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14\nclasspath:udemy\/callfeaturedatafromconfig.feature:15\nclasspath:udemy\/callfeaturedatafromconfig.feature:16\nclasspath:udemy\/callfeaturedatafromconfig.feature:17\nclasspath:udemy\/callfeaturedatafromconfig.feature:18\nclasspath:udemy\/callfeaturedatafromconfig.feature:22\n"},{"result":{"nanos":0,"errorMessage":">> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14\nclasspath:udemy\/callfeaturedatafromconfig.feature:15\nclasspath:udemy\/callfeaturedatafromconfig.feature:16\nclasspath:udemy\/callfeaturedatafromconfig.feature:17\nclasspath:udemy\/callfeaturedatafromconfig.feature:18\nclasspath:udemy\/callfeaturedatafromconfig.feature:22\nclasspath:udemy\/callfeaturedatafromconfig.feature:23","millis":0.0,"status":"failed"},"step":{"line":23,"prefix":"When","index":7,"text":"method delete"},"stepLog":"07:11:49.545 classpath:udemy\/callfeaturedatafromconfig.feature:23\nWhen method delete\n>> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14\nclasspath:udemy\/callfeaturedatafromconfig.feature:15\nclasspath:udemy\/callfeaturedatafromconfig.feature:16\nclasspath:udemy\/callfeaturedatafromconfig.feature:17\nclasspath:udemy\/callfeaturedatafromconfig.feature:18\nclasspath:udemy\/callfeaturedatafromconfig.feature:22\nclasspath:udemy\/callfeaturedatafromconfig.feature:23\n"},{"result":{"nanos":0,"errorMessage":">> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14\nclasspath:udemy\/callfeaturedatafromconfig.feature:15\nclasspath:udemy\/callfeaturedatafromconfig.feature:16\nclasspath:udemy\/callfeaturedatafromconfig.feature:17\nclasspath:udemy\/callfeaturedatafromconfig.feature:18\nclasspath:udemy\/callfeaturedatafromconfig.feature:22\nclasspath:udemy\/callfeaturedatafromconfig.feature:23\nclasspath:udemy\/callfeaturedatafromconfig.feature:24","millis":0.0,"status":"failed"},"step":{"line":24,"prefix":"Then","index":8,"text":"status 204"},"stepLog":"07:11:49.546 classpath:udemy\/callfeaturedatafromconfig.feature:24\nThen status 204\n>> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14\nclasspath:udemy\/callfeaturedatafromconfig.feature:15\nclasspath:udemy\/callfeaturedatafromconfig.feature:16\nclasspath:udemy\/callfeaturedatafromconfig.feature:17\nclasspath:udemy\/callfeaturedatafromconfig.feature:18\nclasspath:udemy\/callfeaturedatafromconfig.feature:22\nclasspath:udemy\/callfeaturedatafromconfig.feature:23\nclasspath:udemy\/callfeaturedatafromconfig.feature:24\n"},{"result":{"nanos":0,"errorMessage":">> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14\nclasspath:udemy\/callfeaturedatafromconfig.feature:15\nclasspath:udemy\/callfeaturedatafromconfig.feature:16\nclasspath:udemy\/callfeaturedatafromconfig.feature:17\nclasspath:udemy\/callfeaturedatafromconfig.feature:18\nclasspath:udemy\/callfeaturedatafromconfig.feature:22\nclasspath:udemy\/callfeaturedatafromconfig.feature:23\nclasspath:udemy\/callfeaturedatafromconfig.feature:24\nclasspath:udemy\/callfeaturedatafromconfig.feature:28","millis":0.0,"status":"failed"},"step":{"comments":["#Get deleted article","#Given header Authorization = 'Token ' + token"],"line":28,"prefix":"Given","index":9,"text":"params { limit:10, offset:0 }"},"stepLog":"07:11:49.546 classpath:udemy\/callfeaturedatafromconfig.feature:28\nGiven params { limit:10, offset:0 }\n>> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14\nclasspath:udemy\/callfeaturedatafromconfig.feature:15\nclasspath:udemy\/callfeaturedatafromconfig.feature:16\nclasspath:udemy\/callfeaturedatafromconfig.feature:17\nclasspath:udemy\/callfeaturedatafromconfig.feature:18\nclasspath:udemy\/callfeaturedatafromconfig.feature:22\nclasspath:udemy\/callfeaturedatafromconfig.feature:23\nclasspath:udemy\/callfeaturedatafromconfig.feature:24\nclasspath:udemy\/callfeaturedatafromconfig.feature:28\n"},{"result":{"nanos":0,"errorMessage":">> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14\nclasspath:udemy\/callfeaturedatafromconfig.feature:15\nclasspath:udemy\/callfeaturedatafromconfig.feature:16\nclasspath:udemy\/callfeaturedatafromconfig.feature:17\nclasspath:udemy\/callfeaturedatafromconfig.feature:18\nclasspath:udemy\/callfeaturedatafromconfig.feature:22\nclasspath:udemy\/callfeaturedatafromconfig.feature:23\nclasspath:udemy\/callfeaturedatafromconfig.feature:24\nclasspath:udemy\/callfeaturedatafromconfig.feature:28\nclasspath:udemy\/callfeaturedatafromconfig.feature:29","millis":0.0,"status":"failed"},"step":{"line":29,"prefix":"Given","index":10,"text":"path 'articles\/'"},"stepLog":"07:11:49.546 classpath:udemy\/callfeaturedatafromconfig.feature:29\nGiven path 'articles\/'\n>> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14\nclasspath:udemy\/callfeaturedatafromconfig.feature:15\nclasspath:udemy\/callfeaturedatafromconfig.feature:16\nclasspath:udemy\/callfeaturedatafromconfig.feature:17\nclasspath:udemy\/callfeaturedatafromconfig.feature:18\nclasspath:udemy\/callfeaturedatafromconfig.feature:22\nclasspath:udemy\/callfeaturedatafromconfig.feature:23\nclasspath:udemy\/callfeaturedatafromconfig.feature:24\nclasspath:udemy\/callfeaturedatafromconfig.feature:28\nclasspath:udemy\/callfeaturedatafromconfig.feature:29\n"},{"result":{"nanos":0,"errorMessage":">> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14\nclasspath:udemy\/callfeaturedatafromconfig.feature:15\nclasspath:udemy\/callfeaturedatafromconfig.feature:16\nclasspath:udemy\/callfeaturedatafromconfig.feature:17\nclasspath:udemy\/callfeaturedatafromconfig.feature:18\nclasspath:udemy\/callfeaturedatafromconfig.feature:22\nclasspath:udemy\/callfeaturedatafromconfig.feature:23\nclasspath:udemy\/callfeaturedatafromconfig.feature:24\nclasspath:udemy\/callfeaturedatafromconfig.feature:28\nclasspath:udemy\/callfeaturedatafromconfig.feature:29\nclasspath:udemy\/callfeaturedatafromconfig.feature:30","millis":0.0,"status":"failed"},"step":{"line":30,"prefix":"When","index":11,"text":"method get"},"stepLog":"07:11:49.547 classpath:udemy\/callfeaturedatafromconfig.feature:30\nWhen method get\n>> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14\nclasspath:udemy\/callfeaturedatafromconfig.feature:15\nclasspath:udemy\/callfeaturedatafromconfig.feature:16\nclasspath:udemy\/callfeaturedatafromconfig.feature:17\nclasspath:udemy\/callfeaturedatafromconfig.feature:18\nclasspath:udemy\/callfeaturedatafromconfig.feature:22\nclasspath:udemy\/callfeaturedatafromconfig.feature:23\nclasspath:udemy\/callfeaturedatafromconfig.feature:24\nclasspath:udemy\/callfeaturedatafromconfig.feature:28\nclasspath:udemy\/callfeaturedatafromconfig.feature:29\nclasspath:udemy\/callfeaturedatafromconfig.feature:30\n"},{"result":{"nanos":0,"errorMessage":">> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14\nclasspath:udemy\/callfeaturedatafromconfig.feature:15\nclasspath:udemy\/callfeaturedatafromconfig.feature:16\nclasspath:udemy\/callfeaturedatafromconfig.feature:17\nclasspath:udemy\/callfeaturedatafromconfig.feature:18\nclasspath:udemy\/callfeaturedatafromconfig.feature:22\nclasspath:udemy\/callfeaturedatafromconfig.feature:23\nclasspath:udemy\/callfeaturedatafromconfig.feature:24\nclasspath:udemy\/callfeaturedatafromconfig.feature:28\nclasspath:udemy\/callfeaturedatafromconfig.feature:29\nclasspath:udemy\/callfeaturedatafromconfig.feature:30\nclasspath:udemy\/callfeaturedatafromconfig.feature:31","millis":0.0,"status":"failed"},"step":{"line":31,"prefix":"Then","index":12,"text":"status 200"},"stepLog":"07:11:49.547 classpath:udemy\/callfeaturedatafromconfig.feature:31\nThen status 200\n>> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14\nclasspath:udemy\/callfeaturedatafromconfig.feature:15\nclasspath:udemy\/callfeaturedatafromconfig.feature:16\nclasspath:udemy\/callfeaturedatafromconfig.feature:17\nclasspath:udemy\/callfeaturedatafromconfig.feature:18\nclasspath:udemy\/callfeaturedatafromconfig.feature:22\nclasspath:udemy\/callfeaturedatafromconfig.feature:23\nclasspath:udemy\/callfeaturedatafromconfig.feature:24\nclasspath:udemy\/callfeaturedatafromconfig.feature:28\nclasspath:udemy\/callfeaturedatafromconfig.feature:29\nclasspath:udemy\/callfeaturedatafromconfig.feature:30\nclasspath:udemy\/callfeaturedatafromconfig.feature:31\n"},{"result":{"nanos":0,"errorMessage":">> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14\nclasspath:udemy\/callfeaturedatafromconfig.feature:15\nclasspath:udemy\/callfeaturedatafromconfig.feature:16\nclasspath:udemy\/callfeaturedatafromconfig.feature:17\nclasspath:udemy\/callfeaturedatafromconfig.feature:18\nclasspath:udemy\/callfeaturedatafromconfig.feature:22\nclasspath:udemy\/callfeaturedatafromconfig.feature:23\nclasspath:udemy\/callfeaturedatafromconfig.feature:24\nclasspath:udemy\/callfeaturedatafromconfig.feature:28\nclasspath:udemy\/callfeaturedatafromconfig.feature:29\nclasspath:udemy\/callfeaturedatafromconfig.feature:30\nclasspath:udemy\/callfeaturedatafromconfig.feature:31\nclasspath:udemy\/callfeaturedatafromconfig.feature:32","millis":0.0,"status":"failed"},"step":{"line":32,"prefix":"And","index":13,"text":"match response.articles[0].title != 'test'"},"stepLog":"07:11:49.547 classpath:udemy\/callfeaturedatafromconfig.feature:32\nAnd match response.articles[0].title != 'test'\n>> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14\nclasspath:udemy\/callfeaturedatafromconfig.feature:15\nclasspath:udemy\/callfeaturedatafromconfig.feature:16\nclasspath:udemy\/callfeaturedatafromconfig.feature:17\nclasspath:udemy\/callfeaturedatafromconfig.feature:18\nclasspath:udemy\/callfeaturedatafromconfig.feature:22\nclasspath:udemy\/callfeaturedatafromconfig.feature:23\nclasspath:udemy\/callfeaturedatafromconfig.feature:24\nclasspath:udemy\/callfeaturedatafromconfig.feature:28\nclasspath:udemy\/callfeaturedatafromconfig.feature:29\nclasspath:udemy\/callfeaturedatafromconfig.feature:30\nclasspath:udemy\/callfeaturedatafromconfig.feature:31\nclasspath:udemy\/callfeaturedatafromconfig.feature:32\n"}],"line":10,"description":"","durationMillis":0.0,"failed":true,"error":">> classpath:udemy\/callfeaturedatafromconfig.feature:10\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\njs failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() { \n02: var env = karate.env; \/\/ get system property 'karate.env' \n03: karate.log('karate.env system property was:', env); \n04: if (!env) { \n05: env = 'dev'; \n06: } \n07: var config = { \n08: \/\/env: env, \n09: myVarName: 'hello karate', \n10: baseUrl: 'https:\/\/gorest.co.in',\n11: tokenID: '6d3c1e07c99bc7aca4c3916ed5a148aa2174c5fcfe14e8e85069db2a24fcb0d4',\n12: udemyUrl: 'https:\/\/api.realworld.io\/api\/'\n13: }\n14: if (env == 'dev') { \n15: \/\/ customize \n16: \/\/ e.g. config.foo = 'bar'; \n17: config.userEmail = 'sriramkukkadapu@gmail.com'\n18: config.userPassword = 'sriramk1'\n19:  \n20: } else if (env == 'qa') { \n21: \/\/ customize \n22: config.userEmail = 'invalid@gmail.com'\n23: config.userPassword = 'invalid'\n24: } \n25: \n26: var accessToken = karate.callSingle('classpath:helpers\/CreateTokenConfigVariables.feature',config).token\n27: karate.configure('headers', {Authorization: 'Token '+ accessToken})\n28: \n29: return config; \n30: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1437, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateTokenConfigVariables.feature:15\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:245)\n- <js>.fn(Unnamed:26)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1332)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1315)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1304)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:305)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:384)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:410)\n\nclasspath:udemy\/callfeaturedatafromconfig.feature:6\nclasspath:udemy\/callfeaturedatafromconfig.feature:7\nclasspath:udemy\/callfeaturedatafromconfig.feature:8\nclasspath:udemy\/callfeaturedatafromconfig.feature:13\nclasspath:udemy\/callfeaturedatafromconfig.feature:14\nclasspath:udemy\/callfeaturedatafromconfig.feature:15\nclasspath:udemy\/callfeaturedatafromconfig.feature:16\nclasspath:udemy\/callfeaturedatafromconfig.feature:17\nclasspath:udemy\/callfeaturedatafromconfig.feature:18\nclasspath:udemy\/callfeaturedatafromconfig.feature:22\nclasspath:udemy\/callfeaturedatafromconfig.feature:23\nclasspath:udemy\/callfeaturedatafromconfig.feature:24\nclasspath:udemy\/callfeaturedatafromconfig.feature:28\nclasspath:udemy\/callfeaturedatafromconfig.feature:29\nclasspath:udemy\/callfeaturedatafromconfig.feature:30\nclasspath:udemy\/callfeaturedatafromconfig.feature:31\nclasspath:udemy\/callfeaturedatafromconfig.feature:32","executorName":"main","name":"Create new article","startTime":1644671507475,"refId":"[1:10]","endTime":1644671509547,"exampleIndex":-1}],"callDepth":0,"name":"GET API Feature - angular real world example","description":"","resultDate":"2022-02-12 07:11:49 AM","durationMillis":0.0,"passedCount":0}